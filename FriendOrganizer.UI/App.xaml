<Application x:Class="FriendOrganizer.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FriendOrganizer.UI"
             Startup="App_OnStartup"
             DispatcherUnhandledException="App_OnDispatcherUnhandledException">
	<Application.Resources>

		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Teal.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>

		<ResourceDictionary>
			
		<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

		<Style TargetType="{x:Type TextBox}">
			<Setter Property="Validation.ErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<StackPanel>
							<AdornedElementPlaceholder x:Name="Placeholder" />
							<TextBlock FontSize="12" Foreground="red"
							           Text="{Binding  ElementName=Placeholder,
								Path=AdornedElement.(Validation.Errors)[0].ErrorContent
								}" />

							<!--<ListBox ItemsSource="{Binding ElementName=Placeholder,
								Path=AdornedElement.(Validation.Errors)
								}">
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding ErrorContent}"/>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>-->

						</StackPanel>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="True">
					<Setter Property="Background" Value="Red" />
					<Setter Property="ToolTip"
					        Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="DataGriColumnStyle" TargetType="TextBlock">
			<Style.Triggers>
				<Trigger Property="Validation.HasError"
				         Value="True">
					<Setter Property="Background"
					        Value="Red" />
					<Setter Property="ToolTip"
					        Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="DataGridEitingColumnStyle" TargetType="TextBox">
			<Style.Triggers>
				<Trigger Property="Validation.HasError"
				         Value="True">
					<Setter Property="Background"
					        Value="Red" />
					<Setter Property="ToolTip"
					        Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<!-- https://stackoverflow.com/questions/666269/styling-nested-elements-in-wpf -->
		</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>

	</Application.Resources>
</Application>